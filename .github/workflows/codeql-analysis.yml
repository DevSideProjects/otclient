---

name: "CodeQL"

on: [push, pull_request]

env:
  NODE_OPTIONS: " --max-old-space-size=8192 "

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        language: [ 'cpp', 'python' ]

    steps:
    - uses: lukka/get-cmake@latest

    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: ${{ matrix.language }}

    - name: Install Dependencies
      if: ${{ matrix.language == 'cpp' }}
      run: >
        sudo apt-get update && sudo apt-get install ccache build-essential
        libluajit-5.1-dev liblua5.1-0 liblua5.1-0-dev libglfw3-dev libgl1-mesa-dev libglu1-mesa-dev libgl1-mesa-dev libegl1-mesa-dev zip

    - name: Restore artifacts, or setup vcpkg (do not install any package)
      if: ${{ matrix.language == 'cpp' }}
      uses: lukka/run-vcpkg@v7
      with:
        setupOnly: true
        vcpkgDirectory: '${{ github.workspace }}/vcpkg'
        appendedCacheKey: ${{ hashFiles( '**/vcpkg.json' ) }}
        vcpkgTriplet: x64-linux
        additionalCachedPaths: ${{ github.workspace }}/build/vcpkg_installed
        vcpkgGitCommitId: 86d689b2305d8c453418cae1ed2009718d05cddf

    - name: 'Run CMake with Ninja, install dependencies with vcpkg, build with CMake'
      if: ${{ matrix.language == 'cpp' }}
      uses: lukka/run-cmake@v3
      with:
        cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
        useVcpkgToolchainFile: true
        buildDirectory: ${{ github.workspace }}/build/
        cmakeAppendedArgs: '-DLUAJIT=ON'

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1
